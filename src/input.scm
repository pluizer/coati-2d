(declare (unit input)
         (uses primitives
               misc
               window))

(import sdl-base
        srfi-1
        (chicken bitwise))

(define %down-keys (list))

(define (poll-input-events)
  (let ((event (make-sdl-event)))
    (sdl-poll-event! event)
    (let ((type (sdl-event-type event)))
      (cond
       ;; Keyboard events (button mod)
       ((= type SDL_KEYDOWN)
        (let ((sym (sdl-event-sym event)))
         (send-event 'key-down
                     sym
                     (sdl-event-mod event))
         (set! %down-keys (cons sym %down-keys))))
       ((= type SDL_KEYUP)
        (let ((sym (sdl-event-sym event)))
         (send-event 'key-up
                     sym
                     (sdl-event-mod event))
         (set! %down-keys (remove (=? sym) %down-keys))))
       ;; Mouse motion event (vect)
       ((= type SDL_MOUSEMOTION)
        (send-event 'mouse-move (vect:create (sdl-event-x event)
                                             (sdl-event-y event))))
       ;; Mouse press event (button vect)
       ((or (= type SDL_MOUSEBUTTONDOWN)
            (= type SDL_MOUSEBUTTONUP))
        (send-event (if (= type SDL_MOUSEBUTTONDOWN) 'button-down 'button-up)
                    (sdl-event-button event)
                    (vect:create (sdl-event-x event)
                                 (sdl-event-y event))))
       ((= type SDL_QUIT)
        (set! %window-should-close? #t)))))
  ;; Keyboard pressed event. These events keep firing as long a key is pressed.
  ;; Modifiers are ignored (always zero).
  (for-each (lambda (sym)
              (send-event 'key-pressed sym 0)) %down-keys))

(define (key-down? key)
  (member key %down-keys))

;; Keys
(define key-unknown 0)
(define key-backspace 8)
(define key-tab 9)
(define key-clear 12)
(define key-return 13)
(define key-pause 19)
(define key-escape 27)
(define key-space 32)
(define key-exclaim 33)
(define key-quotedbl 34)
(define key-hash 35)
(define key-dollar 36)
(define key-ampersand 38)
(define key-quote 39)
(define key-leftparen 40)
(define key-rightparen 41)
(define key-asterisk 42)
(define key-plus 43)
(define key-comma 44)
(define key-minus 45)
(define key-period 46)
(define key-slash 47)
(define key-0 48)
(define key-1 49)
(define key-2 50)
(define key-3 51)
(define key-4 52)
(define key-5 53)
(define key-6 54)
(define key-7 55)
(define key-8 56)
(define key-9 57)
(define key-colon 58)
(define key-semicolon 59)
(define key-less 60)
(define key-equals 61)
(define key-greater 62)
(define key-question 63)
(define key-at 64)
(define key-leftbracket 91)
(define key-backslash 92)
(define key-rightbracket 93)
(define key-caret 94)
(define key-underscore 95)
(define key-backquote 96)
(define key-a 97)
(define key-b 98)
(define key-c 99)
(define key-d 100)
(define key-e 101)
(define key-f 102)
(define key-g 103)
(define key-h 104)
(define key-i 105)
(define key-j 106)
(define key-k 107)
(define key-l 108)
(define key-m 109)
(define key-n 110)
(define key-o 111)
(define key-p 112)
(define key-q 113)
(define key-r 114)
(define key-s 115)
(define key-t 116)
(define key-u 117)
(define key-v 118)
(define key-w 119)
(define key-x 120)
(define key-y 121)
(define key-z 122)
(define key-delete 127)
(define key-kp0 256)
(define key-kp1 257)
(define key-kp2 258)
(define key-kp3 259)
(define key-kp4 260)
(define key-kp5 261)
(define key-kp6 262)
(define key-kp7 263)
(define key-kp8 264)
(define key-kp9 265)
(define key-kp-period 266)
(define key-kp-divide 267)
(define key-kp-multiply 268)
(define key-kp-minus 269)
(define key-kp-plus 270)
(define key-kp-enter 271)
(define key-kp-equals 272)
(define key-up 273)
(define key-down 274)
(define key-right 275)
(define key-left 276)
(define key-insert 277)
(define key-home 278)
(define key-end 279)
(define key-pageup 280)
(define key-pagedown 281)
(define key-f1 282)
(define key-f2 283)
(define key-f3 284)
(define key-f4 285)
(define key-f5 286)
(define key-f6 287)
(define key-f7 288)
(define key-f8 289)
(define key-f9 290)
(define key-f10 291)
(define key-f11 292)
(define key-f12 293)
(define key-f13 294)
(define key-f14 295)
(define key-f15 296)
(define key-numlock 300)
(define key-capslock 301)
(define key-scrollock 302)
(define key-rshift 303)
(define key-lshift 304)
(define key-rctrl 305)
(define key-lctrl 306)
(define key-ralt 307)
(define key-lalt 308)
(define key-rmeta 309)
(define key-lmeta 310)
(define key-lsuper 311)
(define key-rsuper 312)
(define key-mode 313)
(define key-compose 314)
(define key-help 315)
(define key-print 316)
(define key-sysreq 317)
(define key-break 318)
(define key-menu 319)
(define key-power 320)
(define key-euro 321)
(define key-undo 322)

;; Modifiers
(define mod-none #x0000)
(define mod-lshift #x0001)
(define mod-rshift #x0002)
(define mod-lctrl #x0040)
(define mod-rctrl #x0080)
(define mod-lalt #x0100)
(define mod-ralt #x0200)
(define mod-lmeta #x0400)
(define mod-rmeta #x0800)
(define mod-num #x1000)
(define mod-caps #x2000)
(define mod-mode #x4000)
(define mod-reserved #x800)
(define mod-ctrl (bitwise-ior mod-lctrl mod-rctrl))
(define mod-shift (bitwise-ior mod-lshift mod-rshift))
(define mod-alt (bitwise-ior mod-lalt mod-ralt))
(define mod-meta (bitwise-ior mod-lmeta mod-rmeta))

;; Mouse buttons
(define button_left 1)
(define button_middle 2)
(define button_right 3)
(define button_wheel-up 4)
(define button_wheel-down 5)
